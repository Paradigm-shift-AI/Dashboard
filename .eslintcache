[{"D:\\paradigm-dashboard\\src\\index.js":"1","D:\\paradigm-dashboard\\src\\reportWebVitals.js":"2","D:\\paradigm-dashboard\\src\\App.js":"3","D:\\paradigm-dashboard\\src\\Admin.js":"4","D:\\paradigm-dashboard\\src\\Lectures.js":"5","D:\\paradigm-dashboard\\src\\Dashboard.js":"6","D:\\paradigm-dashboard\\src\\SignIn.js":"7","D:\\paradigm-dashboard\\src\\components\\ClassImprove.js":"8","D:\\paradigm-dashboard\\src\\components\\Navbar.js":"9","D:\\paradigm-dashboard\\src\\components\\Class.js":"10","D:\\paradigm-dashboard\\src\\components\\Course.js":"11","D:\\paradigm-dashboard\\src\\components\\Title.js":"12","D:\\paradigm-dashboard\\src\\components\\Copyright.js":"13","D:\\paradigm-dashboard\\src\\components\\QuesCard.js":"14","D:\\paradigm-dashboard\\src\\Plugins.js":"15"},{"size":500,"mtime":1610772327961,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":1075,"mtime":1611054789458,"results":"19","hashOfConfig":"17"},{"size":10545,"mtime":1611053213617,"results":"20","hashOfConfig":"17"},{"size":1359,"mtime":1611059915453,"results":"21","hashOfConfig":"17"},{"size":1349,"mtime":1611055031299,"results":"22","hashOfConfig":"17"},{"size":4391,"mtime":1610687867507,"results":"23","hashOfConfig":"17"},{"size":2732,"mtime":1611038363410,"results":"24","hashOfConfig":"17"},{"size":3410,"mtime":1611051609813,"results":"25","hashOfConfig":"17"},{"size":2157,"mtime":1611059893437,"results":"26","hashOfConfig":"17"},{"size":4029,"mtime":1611117612021,"results":"27","hashOfConfig":"17"},{"size":356,"mtime":1611117672472,"results":"28","hashOfConfig":"17"},{"size":472,"mtime":1611053086989,"results":"29","hashOfConfig":"17"},{"size":2146,"mtime":1611053592551,"results":"30","hashOfConfig":"17"},{"size":1683,"mtime":1611118730044,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1auh3qy",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\paradigm-dashboard\\src\\index.js",[],["72","73"],"D:\\paradigm-dashboard\\src\\reportWebVitals.js",[],"D:\\paradigm-dashboard\\src\\App.js",[],"D:\\paradigm-dashboard\\src\\Admin.js",["74"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Title from \"./components/Title\";\r\nimport Copyright from './components/Copyright';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  fixedHeight: {\r\n    minheight: 720,\r\n    padding: \"50px\",\r\n    width: \"70%\",\r\n    marginLeft: \"15%\",\r\n  },\r\n  card: {\r\n    margin: \"20px\",\r\n    padding: \"20px\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n  list: {\r\n    width: 200,\r\n    height: 230,\r\n    overflow: \"auto\",\r\n  },\r\n  table: {\r\n    marginTop: \"50px\",\r\n  },\r\n  button: {\r\n    marginTop: \"30px\",\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function Admin() {\r\n  const classes = useStyles();\r\n  const [createClass, setCreateClass] = React.useState(false);\r\n  const items = [0, 1, 2, 3, 4, 5, 6];\r\n  const [facultychecked, setfacultyChecked] = React.useState([]);\r\n\r\n  const handlefacultyToggle = (value) => () => {\r\n    const currentIndex = facultychecked.indexOf(value);\r\n    const newChecked = [...facultychecked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setfacultyChecked(newChecked);\r\n    console.log(newChecked);\r\n  };\r\n\r\n  const [studentchecked, setstudentChecked] = React.useState([]);\r\n\r\n  const handlestudentToggle = (value) => () => {\r\n    const currentIndex = studentchecked.indexOf(value);\r\n    const newChecked = [...studentchecked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setstudentChecked(newChecked);\r\n    console.log(newChecked);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Navbar />\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <Paper className={classes.fixedHeight}>\r\n                <Title>Admin Dashboard</Title>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  className={classes.button}\r\n                  endIcon={<AddIcon />}\r\n                  onClick={() => setCreateClass(true)}\r\n                >\r\n                  Create\r\n                </Button>\r\n                {createClass ? (\r\n                  <Paper variant=\"outlined\" className={classes.card}>\r\n                    <Grid container spacing={3}>\r\n                      <Grid item xs={12} md={4} lg={4}>\r\n                        <TextField\r\n                          id=\"outlined-basic\"\r\n                          label=\"Course Name\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4} lg={4}>\r\n                        <Paper variant=\"outlined\">\r\n                          <Typography align=\"center\">Teacher</Typography>\r\n                          <List\r\n                            dense\r\n                            component=\"div\"\r\n                            role=\"list\"\r\n                            className={classes.list}\r\n                          >\r\n                            {items.map((value) => {\r\n                              const labelId = `transfer-list-item-${value}-label`;\r\n\r\n                              return (\r\n                                <ListItem\r\n                                  key={value}\r\n                                  role=\"listitem\"\r\n                                  button\r\n                                  onClick={handlefacultyToggle(value)}\r\n                                >\r\n                                  <ListItemIcon>\r\n                                    <Checkbox\r\n                                      checked={\r\n                                        facultychecked.indexOf(value) !== -1\r\n                                      }\r\n                                      tabIndex={-1}\r\n                                      disableRipple\r\n                                      inputProps={{\r\n                                        \"aria-labelledby\": labelId,\r\n                                      }}\r\n                                    />\r\n                                  </ListItemIcon>\r\n                                  <ListItemText\r\n                                    id={labelId}\r\n                                    primary={`List item ${value + 1}`}\r\n                                  />\r\n                                </ListItem>\r\n                              );\r\n                            })}\r\n                            <ListItem />\r\n                          </List>\r\n                        </Paper>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4} lg={4}>\r\n                        <Paper variant=\"outlined\">\r\n                          <Typography align=\"center\">Student</Typography>\r\n                          <List\r\n                            dense\r\n                            component=\"div\"\r\n                            role=\"list\"\r\n                            className={classes.list}\r\n                          >\r\n                            {items.map((value) => {\r\n                              const labelId = `transfer-list-item-${value}-label`;\r\n\r\n                              return (\r\n                                <ListItem\r\n                                  key={value}\r\n                                  role=\"listitem\"\r\n                                  button\r\n                                  onClick={handlestudentToggle(value)}\r\n                                >\r\n                                  <ListItemIcon>\r\n                                    <Checkbox\r\n                                      checked={\r\n                                        studentchecked.indexOf(value) !== -1\r\n                                      }\r\n                                      tabIndex={-1}\r\n                                      disableRipple\r\n                                      inputProps={{\r\n                                        \"aria-labelledby\": labelId,\r\n                                      }}\r\n                                    />\r\n                                  </ListItemIcon>\r\n                                  <ListItemText\r\n                                    id={labelId}\r\n                                    primary={`List item ${value + 1}`}\r\n                                  />\r\n                                </ListItem>\r\n                              );\r\n                            })}\r\n                            <ListItem />\r\n                          </List>\r\n                        </Paper>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className={classes.button}\r\n                          onClick={() => setCreateClass(true)}\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Paper>\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n\r\n                <TableContainer>\r\n                  <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Dessert (100g serving)</TableCell>\r\n                        <TableCell align=\"right\">Calories</TableCell>\r\n                        <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                        <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                        <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {rows.map((row) => (\r\n                        <TableRow key={row.name}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.name}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{row.calories}</TableCell>\r\n                          <TableCell align=\"right\">{row.fat}</TableCell>\r\n                          <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                          <TableCell align=\"right\">{row.protein}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","D:\\paradigm-dashboard\\src\\Lectures.js",["75","76","77"],"import React, {useContext} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Class from \"./components/Class\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Copyright from './components/Copyright';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default function Lectures() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Navbar />\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <Class />\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","D:\\paradigm-dashboard\\src\\Dashboard.js",["78","79"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Course from \"./components/Course\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Copyright from './components/Copyright';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Navbar />\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <Course />\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","D:\\paradigm-dashboard\\src\\SignIn.js",["80","81"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const [email,setEmail]=useState('');\r\n  const [pass,setPass]=useState('');\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n    const Submit= (e) => {\r\n      localStorage.setItem('email', email);\r\n        e.preventDefault();\r\n        Axios.post('http://localhost:5000/api/login',{\r\n            email: email,\r\n            password: pass,\r\n        }).then(function (response) {\r\n            console.log(response);\r\n            if (response.status==200){\r\n              setStatus(\"Signin successful\")\r\n              history.push('/dashboardstudent')\r\n            } else {\r\n              setStatus(\"SignUp unsuccessful\")\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n    }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e)=>setEmail(e.target.value)}\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            value={pass}\r\n            onChange={(e)=>setPass(e.target.value)}\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={Submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/signup\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","D:\\paradigm-dashboard\\src\\components\\ClassImprove.js",["82","83","84","85","86","87"],"import React, {useState, useEffect} from \"react\";\r\nimport { Paper, Grid } from '@material-ui/core';\r\nimport Logo from \"../img/exam.svg\";\r\nimport Logo1 from \"../img/red-flag.svg\";\r\n\r\nfunction questionInfo({logo, label, count}) {\r\n\r\n  const imgStyle = {\r\n    width: \"42px\",\r\n    height: \"42px\",\r\n  }\r\n\r\n  const countStyle = {\r\n    fontSize: \"24px\",\r\n    fontFamily: 'Lato',\r\n    color: \"#505050\",\r\n    margin: \"5px\",\r\n    marginLeft: \"15px\"\r\n  }\r\n\r\n  const secondaryText = {\r\n    fontSize: \"15px\",\r\n    fontFamily: 'Lato',\r\n    fontWeight: '200',\r\n    opacity: '0.35'\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={0} style={{marginLeft: \"15px\"}}>\r\n      <Grid container direction=\"row\" alignItems=\"end\">\r\n        <img src={logo} style={imgStyle} />\r\n        <p style={countStyle}> {count} </p>\r\n      </Grid>\r\n      <p style={secondaryText}> {label} </p>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nfunction attendees(props) {\r\n\r\n  const paperStyle = {\r\n    padding: \"10px\",\r\n    backgroundColor: \"#FAFAFA\",\r\n    marginLeft: \"30px\",\r\n    textAlign: \"center\",\r\n    borderRadius: \"7.5px\",\r\n    alignSelf: \"flex-end\",\r\n  }\r\n\r\n  const countStyle = {\r\n    fontSize: \"48px\",\r\n    color: \"#505050\",\r\n    fontFamily: 'Lato',\r\n    margin: \"10px\",\r\n    marginBottom: \"2px\"\r\n  }\r\n\r\n  const atStyle = {\r\n    fontSize: \"12px\",\r\n    fontFamily: 'Lato',\r\n    fontWeight: \"100\",\r\n    color: \"#505050\",\r\n    marginTop: \"0px\"\r\n  }\r\n\r\n  return (\r\n    <Paper style={paperStyle} elevation={0}>\r\n      <p style={countStyle}>{props.count}</p>\r\n      <p style={atStyle}> Attendees </p>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nfunction Classa(props) {\r\n\r\n  const boxStyle = {\r\n    margin: \"10px\",\r\n    borderRadius: \"7.5px\",\r\n    boxShadow: \"0px 2px 4px 0 rgba(0, 0, 0, 0.25)\",\r\n    padding: \"10px\"\r\n  }\r\n\r\n  const dateStyle = {\r\n    fontSize: \"1.5rem\",\r\n    fontFamily: 'Lato',\r\n    color: '#414141'\r\n  }\r\n\r\n  const [totalQuestion, setTotalQuestion] = useState({\r\n    label: \"Total Question\",\r\n    logo: Logo\r\n  });\r\n\r\n  const [flaggedQuestion, setFlaggedQuestion] = useState({\r\n    label: \"Flagged Question\",\r\n    logo: Logo1\r\n  });\r\n\r\n  return (\r\n    <Paper style={boxStyle} elevation={0}>\r\n      <Grid style={{display: \"flex\", justifyContent: \"space-between\"}} container direction=\"row\" alignItems=\"center\">\r\n        <Paper elevation={0}>\r\n          <p style={dateStyle} > {props.date} </p>\r\n          <Grid container direction=\"row\" alignItems=\"center\">\r\n            {questionInfo({logo: Logo, label: \"Total Question\", count: props.totalQuestion})}\r\n            {questionInfo({logo: Logo1, label: \"flagged Question\", count: props.flaggedQuestion})}\r\n          </Grid>\r\n        </Paper>\r\n        {attendees({count: props.attend})}\r\n      </Grid>\r\n    </Paper>\r\n  )\r\n}\r\nexport default Classa;\r\n","D:\\paradigm-dashboard\\src\\components\\Navbar.js",["88","89"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 720,\r\n  },\r\n}));\r\n\r\nexport default function Navbar() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n  <div>\r\n      <CssBaseline />\r\n    <AppBar\r\n      position=\"absolute\"\r\n      className={clsx(classes.appBar, open && classes.appBarShift)}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          noWrap\r\n          className={classes.title}\r\n        >\r\n          Paradigm\r\n        </Typography>\r\n        <IconButton color=\"inherit\">\r\n          <Avatar alt=\"Remy Sharp\" src=\"\" />\r\n        </IconButton>\r\n        <IconButton color=\"inherit\" href=\"/\">\r\n          <ExitToAppIcon fontSize=\"large\"/>\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n    </div>);\r\n}","D:\\paradigm-dashboard\\src\\components\\Class.js",["90","91"],"import React, {useContext, useEffect} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Title from \"./Title\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport QuesCard from \"./QuesCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fixedHeight: {\r\n    minheight: 720,\r\n    padding: \"50px\",\r\n    width: \"80%\",\r\n    marginLeft: \"10%\",\r\n  },\r\n  card: {\r\n    margin: \"20px\",\r\n    padding: \"20px\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Class(props) {\r\n  const classes = useStyles();\r\n  const strongtopics = [\"Union\", \"Joins\", \"Cross Joins\"];\r\n  const weaktopics = [\"Inner Join\"];\r\n\r\n  return (\r\n    <Paper className={classes.fixedHeight}>\r\n      <Breadcrumbs aria-label=\"breadcrumb\">\r\n        <Link component=\"h2\" variant=\"h6\" color=\"textPrimary\" onClick={()=>props.history.push('/dashboard')}>\r\n          {props.match.params.course}\r\n        </Link>\r\n        <Typography component=\"h2\" variant=\"h6\" color=\"inherit\">\r\n        {props.match.params.date}\r\n        </Typography>\r\n      </Breadcrumbs>\r\n      <Paper variant=\"outlined\" className={classes.card}></Paper>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6} lg={6}>\r\n          <Paper variant=\"outlined\" className={classes.card}>\r\n            <Title>Weak Topics:</Title>\r\n            {weaktopics.map((el) => (\r\n              <Chip label={el} variant=\"outlined\" />\r\n            ))}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={6}>\r\n          <Paper variant=\"outlined\" className={classes.card}>\r\n            <Title>Strong Topics:</Title>\r\n            {strongtopics.map((el) => (\r\n              <Chip label={el} variant=\"outlined\" />\r\n            ))}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      <QuesCard />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default withRouter(Class);\r\n","D:\\paradigm-dashboard\\src\\components\\Course.js",["92","93","94","95","96"],"import React, { useEffect, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport CardImg from \"../img/bookclub.jpg\";\r\nimport ClassImprove from \"../components/ClassImprove.js\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Title from \"./Title\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport { ListItemText, ListItemIcon } from \"@material-ui/core\";\r\nimport BookIcon from '@material-ui/icons/Book';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fixedHeight: {\r\n    minheight: 720,\r\n    padding: \"50px\",\r\n    width: \"80%\",\r\n    marginLeft: \"10%\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 240,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  card: {\r\n    backgroundImage: `url(${CardImg})`,\r\n    color: \"white\",\r\n    margin: \"20px\",\r\n  },\r\n  chips: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n  icon: {\r\n    marginRight: \"10px\"\r\n  }\r\n}));\r\n\r\nfunction Course(props) {\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    setCourse(event.target.value);\r\n  };\r\n  const data = [\r\n    {\r\n      classname: \"MySQL\",\r\n      asked: 14,\r\n      flagged: 3,\r\n      Date: \"Wed, 13 Dec 2020\",\r\n      Attendance: \"53\",\r\n    },\r\n    {\r\n      classname: \"Cross Join\",\r\n      asked: 15,\r\n      flagged: 3,\r\n      Date: \"Wed, 15 Dec 2020\",\r\n      Attendance: \"57\",\r\n    },\r\n  ];\r\n  const courses = [\"DBMS\", \"OS\"];\r\n  const [course, setCourse] = React.useState(courses[0]);\r\n\r\n  const plugins = [\"SQL\", \"DBMS\", \"JDBC\"];\r\n\r\n  return (\r\n    <Paper className={classes.fixedHeight}>\r\n      <Title>Dashboard</Title>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        alignItems=\"center\"\r\n        style={{ marginTop: \"30px\", marginBottom: \"30px\" }}\r\n      >\r\n        <Grid md={4}>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n              Course\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={course}\r\n              onChange={handleChange}\r\n              label=\"Course\"\r\n            >\r\n              {courses.map((el) => (\r\n                <MenuItem value={el}>\r\n                  <BookIcon className={classes.icon} style={(el==course)?{visibility:\"visible\"}:{visibility:\"hidden\"}}/>\r\n                  {el}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid md={8} className={classes.chips}>\r\n          {plugins.map((el) => (\r\n            <Chip label={el} variant=\"outlined\" />\r\n          ))}\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"add more plugins\"\r\n            href={`/plugins/${course}`}\r\n          >\r\n            <AddCircleOutlineIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={2}>\r\n        {data.map((el) => (\r\n          <Grid\r\n            style={{ cursor: \"pointer\" }}\r\n            item\r\n            md={6}\r\n            key={el.Date}\r\n            onClick={(e) => {\r\n              props.history.push(`/lectures/${course}/${el.Date}`);\r\n            }}\r\n          >\r\n            <ClassImprove\r\n              date={el.Date}\r\n              attend={el.Attendance}\r\n              totalQuestion={el.asked}\r\n              flaggedQuestion={el.flagged}\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default withRouter(Course);\r\n","D:\\paradigm-dashboard\\src\\components\\Title.js",[],"D:\\paradigm-dashboard\\src\\components\\Copyright.js",[],"D:\\paradigm-dashboard\\src\\components\\QuesCard.js",["97","98","99"],"import React, {useContext, useEffect} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Title from \"./Title\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: \"20px\",\r\n    padding: \"20px\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction QuesCard(props) {\r\n  const classes = useStyles();\r\n  const [tick, setTick] = React.useState('');\r\n  \r\n  return (\r\n      <Paper variant=\"outlined\" className={classes.card}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={8} md={8} lg={8}>\r\n            <Title>Ques:</Title>\r\n            <Typography>MongoDB is an example of SQL?</Typography>\r\n            <br/>\r\n            <Title>Ans:</Title>\r\n            <Typography>False</Typography>\r\n          </Grid>\r\n          <Grid item xs={4} md={4} lg={4}>\r\n            <div style={{display:\"flex\"}}>\r\n            <ToggleButtonGroup\r\n              value={tick}\r\n              exclusive\r\n              // onChange={handleTick}\r\n              aria-label=\"flagged\"\r\n              style={{float:\"right\", marginRight:\"30px\"}}\r\n            >\r\n              <ToggleButton value=\"true\" aria-label=\"right\">\r\n                <DoneIcon style={{color:\"green\"}} />\r\n              </ToggleButton>\r\n              <ToggleButton value=\"false\" aria-label=\"wrong\">\r\n                <CloseIcon style={{color:\"red\"}}/>\r\n              </ToggleButton>\r\n            </ToggleButtonGroup>\r\n            </div>\r\n            <br/>\r\n            <Typography >\r\n              No. of correct: 5\r\n              <br/>\r\n              No. of incorrect: 6\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n  );\r\n}\r\n\r\nexport default withRouter(QuesCard);\r\n","D:\\paradigm-dashboard\\src\\Plugins.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":9,"column":8,"nodeType":"106","messageId":"107","endLine":9,"endColumn":12},{"ruleId":"104","severity":1,"message":"108","line":1,"column":16,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"109","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":18},{"ruleId":"104","severity":1,"message":"105","line":7,"column":8,"nodeType":"106","messageId":"107","endLine":7,"endColumn":12},{"ruleId":"104","severity":1,"message":"109","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":18},{"ruleId":"104","severity":1,"message":"105","line":7,"column":8,"nodeType":"106","messageId":"107","endLine":7,"endColumn":12},{"ruleId":"104","severity":1,"message":"110","line":55,"column":10,"nodeType":"106","messageId":"107","endLine":55,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":67,"column":32,"nodeType":"113","messageId":"114","endLine":67,"endColumn":34},{"ruleId":"104","severity":1,"message":"115","line":1,"column":26,"nodeType":"106","messageId":"107","endLine":1,"endColumn":35},{"ruleId":"116","severity":1,"message":"117","line":31,"column":9,"nodeType":"118","endLine":31,"endColumn":44},{"ruleId":"104","severity":1,"message":"119","line":89,"column":10,"nodeType":"106","messageId":"107","endLine":89,"endColumn":23},{"ruleId":"104","severity":1,"message":"120","line":89,"column":25,"nodeType":"106","messageId":"107","endLine":89,"endColumn":41},{"ruleId":"104","severity":1,"message":"121","line":94,"column":10,"nodeType":"106","messageId":"107","endLine":94,"endColumn":25},{"ruleId":"104","severity":1,"message":"122","line":94,"column":27,"nodeType":"106","messageId":"107","endLine":94,"endColumn":45},{"ruleId":"104","severity":1,"message":"123","line":96,"column":9,"nodeType":"106","messageId":"107","endLine":96,"endColumn":25},{"ruleId":"104","severity":1,"message":"124","line":99,"column":9,"nodeType":"106","messageId":"107","endLine":99,"endColumn":26},{"ruleId":"104","severity":1,"message":"108","line":1,"column":16,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"115","line":1,"column":28,"nodeType":"106","messageId":"107","endLine":1,"endColumn":37},{"ruleId":"104","severity":1,"message":"115","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"108","line":1,"column":28,"nodeType":"106","messageId":"107","endLine":1,"endColumn":38},{"ruleId":"104","severity":1,"message":"125","line":16,"column":10,"nodeType":"106","messageId":"107","endLine":16,"endColumn":22},{"ruleId":"104","severity":1,"message":"126","line":16,"column":24,"nodeType":"106","messageId":"107","endLine":16,"endColumn":36},{"ruleId":"111","severity":1,"message":"112","line":97,"column":64,"nodeType":"113","messageId":"114","endLine":97,"endColumn":66},{"ruleId":"104","severity":1,"message":"108","line":1,"column":16,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"115","line":1,"column":28,"nodeType":"106","messageId":"107","endLine":1,"endColumn":37},{"ruleId":"104","severity":1,"message":"127","line":25,"column":16,"nodeType":"106","messageId":"107","endLine":25,"endColumn":23},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'Typography' is defined but never used.","'status' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'totalQuestion' is assigned a value but never used.","'setTotalQuestion' is assigned a value but never used.","'flaggedQuestion' is assigned a value but never used.","'setFlaggedQuestion' is assigned a value but never used.","'handleDrawerOpen' is assigned a value but never used.","'handleDrawerClose' is assigned a value but never used.","'ListItemText' is defined but never used.","'ListItemIcon' is defined but never used.","'setTick' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]