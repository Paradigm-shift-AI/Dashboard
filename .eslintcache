[{"D:\\paradigm-dashboard\\src\\index.js":"1","D:\\paradigm-dashboard\\src\\reportWebVitals.js":"2","D:\\paradigm-dashboard\\src\\App.js":"3","D:\\paradigm-dashboard\\src\\SignIn.js":"4","D:\\paradigm-dashboard\\src\\Dashboard.js":"5","D:\\paradigm-dashboard\\src\\components\\listItems.js":"6","D:\\paradigm-dashboard\\src\\components\\Course.js":"7","D:\\paradigm-dashboard\\src\\components\\Class.js":"8","D:\\paradigm-dashboard\\src\\components\\Title.js":"9","D:\\paradigm-dashboard\\src\\Admin.js":"10","D:\\paradigm-dashboard\\src\\components\\Navbar.js":"11","D:\\paradigm-dashboard\\src\\Lectures.js":"12","D:\\paradigm-dashboard\\src\\Context.js":"13"},{"size":500,"mtime":1610772327961,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":651,"mtime":1610968217992,"results":"17","hashOfConfig":"15"},{"size":4391,"mtime":1610687867507,"results":"18","hashOfConfig":"15"},{"size":1751,"mtime":1610968469967,"results":"19","hashOfConfig":"15"},{"size":2039,"mtime":1610688827290,"results":"20","hashOfConfig":"15"},{"size":3388,"mtime":1610982330211,"results":"21","hashOfConfig":"15"},{"size":3667,"mtime":1610982435833,"results":"22","hashOfConfig":"15"},{"size":358,"mtime":1610688821501,"results":"23","hashOfConfig":"15"},{"size":8020,"mtime":1610968778024,"results":"24","hashOfConfig":"15"},{"size":4006,"mtime":1610982902146,"results":"25","hashOfConfig":"15"},{"size":1801,"mtime":1610975176046,"results":"26","hashOfConfig":"15"},{"size":229,"mtime":1610982181706,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1auh3qy",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\paradigm-dashboard\\src\\index.js",[],["57","58"],"D:\\paradigm-dashboard\\src\\reportWebVitals.js",[],"D:\\paradigm-dashboard\\src\\App.js",["59"],"D:\\paradigm-dashboard\\src\\SignIn.js",["60","61"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const [email,setEmail]=useState('');\r\n  const [pass,setPass]=useState('');\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n    const Submit= (e) => {\r\n      localStorage.setItem('email', email);\r\n        e.preventDefault();\r\n        Axios.post('http://localhost:5000/api/login',{\r\n            email: email,\r\n            password: pass,\r\n        }).then(function (response) {\r\n            console.log(response);\r\n            if (response.status==200){\r\n              setStatus(\"Signin successful\")\r\n              history.push('/dashboardstudent')\r\n            } else {\r\n              setStatus(\"SignUp unsuccessful\")\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n    }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e)=>setEmail(e.target.value)}\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            value={pass}\r\n            onChange={(e)=>setPass(e.target.value)}\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={Submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/signup\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","D:\\paradigm-dashboard\\src\\Dashboard.js",["62"],"D:\\paradigm-dashboard\\src\\components\\listItems.js",[],"D:\\paradigm-dashboard\\src\\components\\Course.js",[],"D:\\paradigm-dashboard\\src\\components\\Class.js",["63","64","65"],"D:\\paradigm-dashboard\\src\\components\\Title.js",[],"D:\\paradigm-dashboard\\src\\Admin.js",["66"],"D:\\paradigm-dashboard\\src\\components\\Navbar.js",["67","68"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 720,\r\n  },\r\n}));\r\n\r\nexport default function Navbar() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n  <div>\r\n      <CssBaseline />\r\n    <AppBar\r\n      position=\"absolute\"\r\n      className={clsx(classes.appBar, open && classes.appBarShift)}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        {/* <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={handleDrawerOpen}\r\n          className={clsx(\r\n            classes.menuButton,\r\n            open && classes.menuButtonHidden\r\n          )}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton> */}\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          noWrap\r\n          className={classes.title}\r\n        >\r\n          Dashboard\r\n        </Typography>\r\n        <IconButton color=\"inherit\">\r\n          <Avatar alt=\"Remy Sharp\" src=\"\" />\r\n          <Typography\r\n            component=\"h6\"\r\n            variant=\"button\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            style={{ paddingInline: \"10px\" }}\r\n          >\r\n            Name\r\n          </Typography>\r\n        </IconButton>\r\n        <Button\r\n          variant=\"outlined\"\r\n          style={{ borderColor: \"white\", color: \"white\" }}\r\n        >\r\n          LogOut\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n    </div>);\r\n}","D:\\paradigm-dashboard\\src\\Lectures.js",["69","70","71"],"D:\\paradigm-dashboard\\src\\Context.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":12},{"ruleId":"76","severity":1,"message":"80","line":55,"column":10,"nodeType":"78","messageId":"79","endLine":55,"endColumn":16},{"ruleId":"81","severity":1,"message":"82","line":67,"column":32,"nodeType":"83","messageId":"84","endLine":67,"endColumn":34},{"ruleId":"76","severity":1,"message":"85","line":25,"column":7,"nodeType":"78","messageId":"79","endLine":25,"endColumn":18},{"ruleId":"76","severity":1,"message":"86","line":1,"column":28,"nodeType":"78","messageId":"79","endLine":1,"endColumn":37},{"ruleId":"76","severity":1,"message":"87","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":15},{"ruleId":"76","severity":1,"message":"88","line":40,"column":16,"nodeType":"78","messageId":"79","endLine":40,"endColumn":23},{"ruleId":"76","severity":1,"message":"85","line":38,"column":7,"nodeType":"78","messageId":"79","endLine":38,"endColumn":18},{"ruleId":"76","severity":1,"message":"89","line":96,"column":9,"nodeType":"78","messageId":"79","endLine":96,"endColumn":25},{"ruleId":"76","severity":1,"message":"90","line":99,"column":9,"nodeType":"78","messageId":"79","endLine":99,"endColumn":26},{"ruleId":"76","severity":1,"message":"91","line":1,"column":16,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"92","line":10,"column":8,"nodeType":"78","messageId":"79","endLine":10,"endColumn":21},{"ruleId":"76","severity":1,"message":"85","line":25,"column":7,"nodeType":"78","messageId":"79","endLine":25,"endColumn":18},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'status' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'drawerWidth' is assigned a value but never used.","'useEffect' is defined but never used.","'Divider' is defined but never used.","'setTick' is assigned a value but never used.","'handleDrawerOpen' is assigned a value but never used.","'handleDrawerClose' is assigned a value but never used.","'useContext' is defined but never used.","'CourseContext' is defined but never used.","no-global-assign","no-unsafe-negation"]